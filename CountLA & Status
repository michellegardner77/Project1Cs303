//The Status. The direcctions ask for late, completed, and assigned

list Assignment::status(list <Assignment> &late, Assignment &A, list <Assignment> &assigned, Assignment &A, list <Assignment> &completed)
{
	list<Assignment>::iterator iter = li.begin();
	while (iter != nullptr)
	{
		for (int i = 0; i != li.end; i++)
		{
			if (A.due_date <= A.assigned_date)
			{
				if (li[i] == "assigned")
				{
					return assigned;
				}
			}

			for (int j = 0; j != li.end; j++)
			{
				if (A.due_date <= A.assigned_date)
				{
					if (li[j] == "completed")
					{
						return completed;
					}
				}

			}
			
			for (int k = 0; k != li.end; k++) 
			{
				if (A.due_date >= A.assigned_date)
				{
					if (li[k] == "late")
					{
						return late;
					}
				}
			}


		}
	}
}

//Count Late Assignments
int Assignment::count_LA(list <Assignment> &li, Assignment &A)
{
	int countLA = 0;
	list<Assignment>::iterator itr = li.begin(); 
	while (itr != li.end)
	{
		if((*itr).status = "late")
		{
			countLA++;
		}
		
	}
	return countLA;
}
